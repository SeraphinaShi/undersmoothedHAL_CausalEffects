
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## ----load_lib, include = FALSE, warning=FALSE, message=FALSE, echo=FALSE-------------------------------------------------------------
> library(here)
here() starts at /home/seraphinashi/undersmoothedHAL_CausalEffects
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(tidyr)
> library(foreach)
> 
> library(stringr)
> library(glmnet)
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loaded glmnet 4.1-3
> 
> library(origami)
origami v1.0.5: Generalized Framework for Cross-Validation
> library(hal9001)
Loading required package: Rcpp
hal9001 v0.4.3: The Scalable Highly Adaptive Lasso
note: fit_hal defaults have changed. See ?fit_hal for details
> library(tictoc)

Attaching package: ‘tictoc’

The following object is masked from ‘package:data.table’:

    shift

> 
> library(R.utils)
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.1 (2020-08-26 16:20:06 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.24.0 (2020-08-26 16:11:58 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.12.0 (2022-06-28 03:20:05 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:tidyr’:

    extract

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, warnings

> 
> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> 
> library(ggplot2)
> library(cowplot)
> library(gridExtra)

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

> library(grid)
> 
> 
> ## ----setup, include = FALSE----------------------------------------------------------------------------------------------------------
> plotFolder <- here("results","images", "v3")
> if(!file.exists(plotFolder)) dir.create(plotFolder,recursive=TRUE)
> 
> knitr::opts_chunk$set(
+   cache=FALSE, autodep=FALSE, warning=FALSE, message=FALSE, echo=FALSE,
+   results = 'markup', dev='png', dpi=150, fig.align = "center", fig.path=paste0(plotFolder, "/"),
+   cache.path=".cache/",
+   duplicate.label="allow"
+ )
> 
> source(here("scripts", "scripts_v3", "1_simu_functions_hal9001.R"))
> source(here("scripts", "scripts_v3", "1_simu_functions.R"))
> 
> 
> 
> ## ----check_sys3----------------------------------------------------------------------------------------------------------------------
> 
> generate_data_3 <- function(n, a=NA, z=NA){
+   # exogenous variables
+   U_W <- rnorm(n, 0, 1)
+   U_A <- rnorm(n, 0, 2)
+   U_Z <- runif(n, 0, 1)
+   U_Y <- runif(n, 0, 1)
+   
+   # endogenous variables
+   W <- U_W
+   
+   if(is.na(a)){
+     A <-  2 - 0.5*W + U_A
+     A[A<=0] = 0
+     A[A>=5] = 5
+   } else {
+     A <- rep(a, n)
+   }
+   
+   if(is.na(z)){
+     Z <- as.numeric(U_Z < plogis(2-W-A))
+   } else {
+     Z <- rep(z, n)
+   }
+   
+   Y <- as.numeric(U_Y < plogis(-10 - 3*W + 2*A + Z * (5 + 2*sin(A^2) -20*as.numeric(A > 4)) ))
+   
+   # data frame
+   O <- data.frame(W, A, Z, Y)
+   return(O)
+ }
> 
> ## ----true_psi_sys3-------------------------------------------------------------------------------------------------------------------
> # Getting trul value of psi
> #------------------------------------------------------------------------------------
> # 
> # a_vec <- seq(0,5,0.1)
> # psi0_a_0 <- c()
> # psi0_a_1 <- c()
> # 
> # N = 1e+07
> # data_0_0 <- generate_data_3(n=N, a=0, z=0)
> # data_0_1 <- generate_data_3(n=N, a=0, z=1)
> # 
> # for (i in 1:length(a_vec)) {
> #   a <- a_vec[i]
> #   
> #   data_a_0 <- generate_data_3(n=N, a=a, z=0)
> #   psi0_a_0[i] <- mean(data_a_0$Y - data_0_0$Y)
> #   
> #   data_a_1 <- generate_data_3(n=N, a=a, z=1)
> #   psi0_a_1[i] <- mean(data_a_1$Y - data_0_1$Y)
> # }
> # 
> # psi0_pnt <- data.frame(a=rep(a_vec, 2), z=c(rep(1,length(a_vec)), rep(0,length(a_vec))), psi0 = c(psi0_a_1,psi0_a_0))
> # psi0_10pnt <- psi0_pnt[psi0_pnt$a %in% seq(0.5,5,0.5),]
> # 
> # save.image(file=here("data", "rdata", "02_simu_V3_sys3_psi0.RData"))
> #------------------------------------------------------------------------------------ 
> load(file=here("data", "rdata", "02_simu_V3_sys3_psi0.RData"))
> source(here("scripts", "scripts_v3", "1_simu_functions.R"))
> #------------------------------------------------------------------------------------
> 
> 
> ## ----simu_sys3_n500-------------------------------------------------------------------------------------------------------------------
> nn=500
> # 
> # ## ----simu_sys3_n500_1_cv, fig.width=6, fig.height=4-----------------------------------------------------------------------------------
> # set.seed(123)
> # results <- run_simu_1round(generate_data_3, n=nn)
> # psi_10pnt <- merge(as.data.frame(psi0_10pnt), as.data.frame(results), by=c("a", "z"))
> # 
> # 
> # ## ----simu_sys3_n500_B_cv, fig.width=6, fig.height=7-----------------------------------------------------------------------------------
> # set.seed(123)
> # simu_results <- run_simu_rep(generate_data_3, n=nn, B=1000, return_all_rslts=T)
> # 
> # save.image(file=here("data", "rdata", "02_simu_V3_sys3_500_CV.RData"))
> # 
> # ## ----simu_sys3_n500_1_u, fig.width=6, fig.height=4------------------------------------------------------------------------------------
> # set.seed(123)
> # n = nn
> # results_under <- run_simu_1round(generate_data_3, n=nn, undersmooth=T)
> # 
> # psi_10pnt <- merge(as.data.frame(psi0_10pnt), as.data.frame(results_under), by=c("a", "z"))
> # cat(paste0("Undersmoothed lambda: ", unique(psi_10pnt$lambda), "\n which is ", unique(psi_10pnt$lambda_scaler), " * lambda_CV"))
> # 
> # 
> # ## ----simu_sys3_n500_B_u, fig.width=6, fig.height=7------------------------------------------------------------------------------------
> # set.seed(123)
> # simu_results <- run_simu_rep(generate_data_3, n=nn, B=1000, return_all_rslts=T,  undersmooth=T)
> # 
> # save.image(file=here("data", "rdata", "02_simu_V3_sys3_500_U.RData"))
> # 
> # 
> 
> ## ----simu_sys3_n500_1_u_local, fig.width=6, fig.height=4------------------------------------------------------------------------------------
> set.seed(123)
> n = nn
> results_under <- run_simu_1round(generate_data_3, n=nn, undersmooth='local')
[1] 0.0017966314 0.0001641231 0.0004256465 0.0021927518 0.0002102132
> psi_10pnt <- merge(as.data.frame(psi0_10pnt), as.data.frame(results_under), by=c("a", "z"))
> 
> 
> ## ----simu_sys3_n500_B_u_local, fig.width=6, fig.height=7------------------------------------------------------------------------------------
> set.seed(123)
> gen_data_functions = generate_data_3
> n=nn
> B=1000
> return_all_rslts=T
> undersmooth='local'
> lambda_scaler=1
> 
> simu_results <- run_simu_rep(generate_data_3, n=nn, B=1000, return_all_rslts=T,  undersmooth='local')
[1] 1
[1] 0.0017966314 0.0001641231 0.0004256465 0.0021927518 0.0002102132
[1] 2
[1] 0.0011303758 0.0006568038 0.0001963149 0.0027391005 0.0002583928
[1] 3
[1] 1.730798e-03 2.935752e-04 1.061953e-03 1.244451e-03 8.695481e-05
[1] 4
[1] 1.879447e-03 1.877147e-03 8.804427e-04 1.666222e-04 3.080359e-05
[1] 5
[1] 1.346827e-03 1.225857e-05 4.447791e-04 1.913292e-06 1.273100e-04
[1] 8.191862e-04 6.499656e-04 7.950665e-05 4.955016e-04 2.437282e-04
[1] 6
[1] 3.769577e-03 1.745007e-03 2.626364e-03 2.215019e-04 8.900779e-05
[1] 7
[1] 8.655182e-04 8.684617e-04 5.948979e-04 5.841785e-05 1.540275e-03
[1] 8
[1] 0.0024646567 0.0004219637 0.0002908123 0.0005952694 0.0001920768
[1] 9
[1] 0.0020617226 0.0019555388 0.0002155373 0.0007185815 0.0002581562
[1] 10
[1] 8.493062e-04 7.442315e-05 7.888492e-04 1.047521e-03 4.216416e-04
[1] 11
[1] 0.0013976429 0.0019139150 0.0017672798 0.0003456621 0.0003075659
[1] 12
[1] 0.0010012223 0.0025151649 0.0006292020 0.0003521644 0.0001789822
[1] 13
[1] 3.012925e-04 1.630465e-03 4.222044e-04 2.285024e-04 8.862699e-05
[1] 14
[1] 0.0002681925 0.0004908985 0.0004016269 0.0009912891 0.0002445721
[1] 15
[1] 0.0015653974 0.0007651124 0.0006533096 0.0016075660 0.0001088992
[1] 16
[1] 0.0011371427 0.0013774457 0.0005818928 0.0003063342 0.0002071210
[1] 17
[1] 0.0020834631 0.0017751047 0.0003203483 0.0004909124 0.0003397596
[1] 18
[1] 0.0016855601 0.0009065420 0.0002083040 0.0005821317 0.0004494653
[1] 19
[1] 0.0018095186 0.0005459071 0.0015341538 0.0005612899 0.0001797122
[1] 20
[1] 0.0010443737 0.0018521976 0.0002264522 0.0008963807 0.0003583117
[1] 21
[1] 5.323687e-06 5.243495e-04 8.198668e-04 4.655552e-04 1.239124e-04
[1] 9.497143e-04 7.252037e-04 1.068832e-03 5.965276e-04 9.058885e-05
[1] 22
[1] 0.0023154531 0.0004085169 0.0004652503 0.0016753004 0.0002463236
[1] 23
[1] 0.0004388668 0.0008754385 0.0016690313 0.0012261252 0.0001739212
[1] 24
[1] 1.535454e-03 9.465380e-05 3.658984e-04 1.310075e-03 6.215789e-05
[1] 25
[1] 0.0015941640 0.0011455630 0.0009836615 0.0007662966 0.0001436754
[1] 26
[1] 2.798277e-03 1.277334e-03 2.578570e-04 1.626015e-03 2.239603e-05
[1] 27
[1] 0.0011560911 0.0006254500 0.0008608880 0.0003385650 0.0000349489
[1] 28
[1] 0.0008324754 0.0006003195 0.0008106759 0.0005671332 0.0018130274
[1] 29
[1] 1.292195e-03 1.583284e-03 1.363406e-04 4.564542e-04 9.815075e-05
[1] 30
[1] 0.0009212318 0.0008765644 0.0004160322 0.0007625109 0.0001912736
[1] 31
[1] 2.070848e-03 4.067641e-05 9.744121e-04 1.433477e-03 7.614443e-07
[1] 0.0006813483 0.0010648961 0.0005542156 0.0010230013 0.0002089662
[1] 32
[1] 0.0013277086 0.0002594501 0.0004845814 0.0013052866 0.0004684673
[1] 33
[1] 1.551280e-03 7.210255e-05 3.918606e-04 8.519165e-04 2.388176e-04
[1] 34
[1] 0.0010114781 0.0006430392 0.0004797467 0.0007433536 0.0003238841
[1] 35
[1] 0.0013004453 0.0006074446 0.0002595498 0.0006970118 0.0001914924
[1] 36
[1] 0.0004521970 0.0004090759 0.0006096499 0.0013503391 0.0001538191
[1] 37
[1] 0.0007823701 0.0008186902 0.0018251394 0.0007129757 0.0003925539
[1] 38
[1] 0.0019536638 0.0016351809 0.0006120792 0.0008633122 0.0001181646
[1] 39
[1] 0.0011335593 0.0001008549 0.0004933472 0.0001450500 0.0049200617
[1] 40
[1] 0.0005787310 0.0008730661 0.0015618434 0.0022217478 0.0001422542
[1] 41
[1] 0.0007217576 0.0006651373 0.0003669943 0.0013413972 0.0001234410
[1] 42
[1] 0.0024145904 0.0006196308 0.0001807890 0.0039702353 0.0003923259
[1] 43
[1] 1.549536e-03           NA 2.304088e-04 1.529432e-03 2.870325e-05
[1] 44
[1] 7.369631e-04 6.011077e-04 1.023451e-03 6.815855e-05 8.641069e-05
[1] 45
[1] 0.0017177251 0.0016379583 0.0009278260 0.0006687416 0.0059241600
[1] 46
[1] 0.0004871350 0.0008515924 0.0003577072 0.0003852819 0.0000706555
[1] 47
[1] 1.006806e-03 5.539107e-04 1.801980e-03 7.679393e-05 2.885480e-04
[1] 48
[1] 0.0024149484 0.0010875240 0.0005304845 0.0022298057 0.0002586288
[1] 49
[1] 8.442942e-04 2.872707e-04 7.288120e-04 1.173164e-03 1.257729e-05
[1] 50
[1] 0.0036711274 0.0004820490 0.0021646912 0.0030713660 0.0001283178
[1] 51
[1] 3.206033e-04 6.161595e-04 4.968950e-04 8.460194e-05 3.628688e-04
[1] 52
[1] 0.0013502017 0.0006533574 0.0001897291 0.0017799731 0.0002967890
[1] 53
[1] 0.0010273124 0.0003225585 0.0007708121 0.0013815567 0.0001608099
[1] 54
[1] 2.284792e-03 1.094048e-03 4.951755e-05 1.028976e-04 3.953981e-05
[1] 55
[1] 0.0036857879 0.0003054644 0.0012191299 0.0003534790 0.0001191046
[1] 56
[1] 0.0019565035 0.0015277682 0.0003873571 0.0001845828 0.0002920178
[1] 57
[1] 0.0025650658 0.0007512761 0.0005124341 0.0017870501 0.0001960094
[1] 58
[1] 0.0012797295 0.0002453716 0.0022600380 0.0006964492 0.0003605013
[1] 59
[1] 0.0017201801 0.0018829571 0.0001566841 0.0001875676 0.0008708632
[1] 60
[1] 0.0005258804 0.0001081017 0.0010616264 0.0027237210 0.0008465871
[1] 61
[1] 0.0020529458 0.0013288385 0.0001207617 0.0017750411 0.0003248936
[1] 62
[1] 0.0021818584 0.0003050982 0.0011542327 0.0002760908 0.0001415839
[1] 63
[1] 0.0020611340 0.0011337544 0.0008457831 0.0001811053 0.0001959699
[1] 64
[1] 0.0005862383 0.0002826729 0.0015537409 0.0003790836 0.0001113014
[1] 65
[1] 0.0006424310 0.0009001567 0.0007279729 0.0001308528 0.0003988491
[1] 66
[1] 1.020733e-03           NA 6.556404e-04 8.360745e-05 1.911234e-04
[1] 67
[1] 0.0010961618 0.0001554142 0.0003006778 0.0002039978 0.0001068365
[1] 68
[1] 0.0018538457 0.0001034286 0.0005848810 0.0013555431 0.0003557146
[1] 69
[1] 0.0034722673 0.0017414093 0.0008468064 0.0009684725 0.0001285532
[1] 70
[1] 1.365394e-03 4.605593e-04 3.617823e-04 4.846886e-04 8.526112e-05
[1] 71
[1] 1.784725e-03 1.629583e-04 3.679083e-04 5.211587e-04 5.365379e-05
[1] 72
[1] 0.0001631354 0.0007016463 0.0011042489 0.0006741792 0.0025190739
[1] 73
[1] 0.0032005278 0.0013490057 0.0007362366 0.0017383767 0.0001280778
[1] 74
[1] 1.854244e-03 1.846976e-03 9.531996e-05 5.943370e-04 2.097403e-04
[1] 75
[1] 0.0020870108 0.0003982078 0.0007528829 0.0007876996 0.0001414257
[1] 76
[1] 3.627698e-03 3.748896e-03 4.989884e-04 1.886007e-03 8.870951e-05
[1] 77
[1] 0.0005905809 0.0007123068 0.0013625799 0.0007208004 0.0002537204
[1] 78
[1] 0.0012225488 0.0009937987 0.0003746765 0.0010367060 0.0002511028
[1] 79
[1] 0.0012960852 0.0003866585 0.0006662968 0.0018289387 0.0001824458
[1] 80
[1] 0.0038361772 0.0017779087 0.0005185529 0.0009382604 0.0003328319
[1] 81
[1] 0.0018018722 0.0011410656 0.0007190295 0.0020625153 0.0003071550
[1] 82
[1] 0.0007103870 0.0008744834 0.0015375599 0.0002319331 0.0045119324
[1] 83
[1] 0.0013989270 0.0010166361 0.0001761716 0.0006419344 0.0001798176
[1] 84
[1] 1.276180e-03 1.023132e-03 4.455748e-04 2.060878e-03 1.947972e-05
[1] 85
[1] 0.0014599816 0.0001508517 0.0019438073 0.0002470222 0.0005195906
[1] 86
[1] 1.398346e-03 8.237218e-05 1.023704e-03 8.867137e-04 1.639817e-04
[1] 87
[1]           NA 0.0010529417 0.0013151504 0.0000914716 0.0002134037
[1] 88
[1] 8.036882e-04 7.424452e-04 2.652965e-05 2.203873e-03 1.484227e-04
[1] 89
[1] 9.991027e-04 4.566093e-05 1.344223e-04 1.607255e-03 2.844643e-04
[1] 90
[1] 1.250517e-03 9.862131e-04 3.299403e-04 1.072202e-03 9.540241e-05
[1] 91
[1] 0.0013446785 0.0002274006 0.0007823680 0.0003091736 0.0002368223
[1] 92
[1] 1.353319e-03 5.722793e-05 6.204727e-04 1.174551e-03 3.471882e-04
[1] 93
[1] 1.596938e-03 6.704513e-04 1.483189e-03 1.315672e-05 9.293843e-04
[1] 94
[1] 1.543866e-03 1.468596e-03 7.570330e-04 8.487061e-05 2.440135e-04
[1] 95
[1] 1.933486e-03 8.743954e-04 1.340583e-03 1.357918e-04 4.630442e-05
[1] 96
[1] 3.043801e-03 5.626643e-03 1.760249e-03 7.407175e-04 3.822286e-05
[1] 97
[1] 2.154393e-03 8.733752e-05 9.239048e-05 5.136406e-04 8.474759e-05
[1] 98
[1] 1.745981e-03 5.407930e-05 2.162141e-04 3.399856e-04 6.871268e-05
[1] 99
Error: Matrices must have same number of columns in rbind2(.Call(dense_to_Csparse, x), y)
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
